#!/usr/bin/env bash

machine_exists() {
	machinectl list-images | grep subvolume | cut -f 1 -d ' ' | grep -Fxq "${1#*@}"
}

machine_active() {
	machinectl list | grep container | cut -f 1 -d ' ' | grep -Fxq "${1#*@}"
}

list_machines() {
	machinectl list-images | grep subvolume | cut -f 1 -d ' ' | sort
}

have_label() {
	cat /usr/local/etc/nspawn/labels | grep -Fq "${1#*@}"
}

print_label() {
	m="${1#*@}"
	have_label "$1" && ( cat /usr/local/etc/nspawn/labels | grep -F "$m" | cut -f 2 -d ' ' ) || echo "$m"
}

have_terminal() {
	m="${1#*@}"
	( sudo pacman -Qs --sysroot /var/lib/machines/"$m" gaspar-device-gpu >/dev/null && sudo test -f /var/lib/machines/"$m"/usr/bin/alacritty ) || sudo test -f /var/lib/machines/"$m"/usr/bin/uxterm
}

list_terminals() {
	terminals=""
	while read s
	do
		have_terminal "$s" && terminals="$terminals$s\n"
	done < <(cat /usr/local/etc/nspawn/terminals | sort -t @ -k 2n)
	echo -en "$terminals"
}

if [[ "$1" == menu ]]
then
	picks="terminal\ntoggle\nshell"
	pick=$(echo -e "$picks" | dmenu -l 20 -p terminalx:)
	[ -z "$pick" ] && exit
	echo -e "$picks" | grep -Fxq "$pick" || exit
	$0 "$pick"
elif [[ "$1" == toggle ]]
then
	list=""

	while read m
	do
		s=''
		machine_active "$m" && s="currently on" || s="currently off"
		l=$(print_label "$m")
		list="$list$l+$m+($s)\n"
	done < <(list_machines)

	list=$(echo -en "$list" | column -t -s +)
	m=$(echo -en "$list" | dmenu -p toggle: -l 20 | sed 's/\s\+/+/g')

	pick=$(echo "$m" | cut -f 2 -d +)
	machine_exists "$pick" || exit
	if machine_active "$pick"
	then
		sudo machinectl poweroff "$pick" &&  dunstify terminalx "Powereing off $pick"
	else
		sudo machinectl start "$pick" && dunstify terminalx "Booting $pick"
	fi
elif [[ "$1" == shell ]]
then
	[ ! -f /usr/local/etc/nspawn/terminals ] && exit

	terminals=$(cat /usr/local/etc/nspawn/terminals | sort -t @ -k 2n)

	if [ ! -z "$terminals" ]
	then
		pick=$(echo "$terminals" | dmenu -l 20 -p "shell:")

		if [ ! -z "$pick" ]
		then
			machine=${pick#*@}

			was_active=0

			machine_exists "$machine" || exit
			machine_active "$machine" || ( sudo machinectl start "$machine" && dunstify terminalx "Booting $machine" )

			[[ 0 -eq "$was_active" ]]

			c=0

			while :;
			do
				c=$(( c + 1 ))

				if machine_active "$machine"
				then
					alacritty -e sh -c "sudo machinectl shell $pick; read"
					break
				elif [[ "$c" -ge 5 ]]
				then
					dunstify terminalx "Failed to run terminal on $machine"
					break
				fi

				sleep 1
			done
		fi
	fi
elif [[ "$1" == terminal ]]
then
	[ ! -f /usr/local/etc/nspawn/terminals ] && exit

	terminals=$(cat /usr/local/etc/nspawn/terminals | sort -t @ -k 2n)

	if [ ! -z "$terminals" ]
	then
		pick=$(echo "$terminals" | dmenu -l 20 -p "terminal:")

		if [ ! -z "$pick" ]
		then
			machine=${pick#*@}

			was_active=0

			machine_exists "$machine" || exit
			machine_active "$machine" || ( sudo machinectl start "$machine" && dunstify terminalx "Booting $machine" )

			[[ 0 -eq "$was_active" ]]

			c=0

			while :;
			do
				c=$(( c + 1 ))

				if machine_active "$machine"
				then
					if ! sudo machinectl shell "$pick" $0 2>/dev/null
					then
						sleep 1;
						continue
					fi
					break
				elif [[ "$c" -ge 5 ]]
				then
					dunstify terminalx "Failed to run terminal on $machine"
					break
				fi

				sleep 1
			done
		fi
	fi
else
	export DISPLAY=:0
	export XAUTHORITY=/tmp/nspawn/xauth

	pacman -Qs gaspar-device-gpu >/dev/null && test -f /usr/bin/alacritty && alacritty || uxterm
fi
