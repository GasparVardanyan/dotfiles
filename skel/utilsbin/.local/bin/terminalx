#!/usr/bin/env bash

machine_exists() {
	machinectl list-images | grep subvolume | cut -f 1 -d ' ' | grep -Fxq "${1#*@}"
}

machine_active() {
	machinectl list | grep container | cut -f 1 -d ' ' | grep -Fxq "${1#*@}"
}

list_machines() {
	machinectl list-images | grep subvolume | cut -f 1 -d ' ' | sort
}

if [[ "$1" == menu ]]
then
	picks="terminal\ntoggle\nshell"
	pick=$(echo -e "$picks" | dmenu -l 20 -p terminalx:)
	[ -z "$pick" ] && exit
	echo -e "$picks" | grep -Fxq "$pick" || exit
	terminalx "$pick"
elif [[ "$1" == toggle ]]
then
	list=""

	while read m
	do
		s=''
		machine_active "user@$m" && s="currently on" || s="currently off"
		list="$list$m ($s)\n"
	done < <(list_machines)

	m=$(echo -en "$list" | dmenu -p toggle: -l 20)

	pick=${m%% *}
	machine_exists "$pick" || exit
	if machine_active "$pick"
	then
		sudo machinectl poweroff "$pick" &&  dunstify terminalx "Powereing off $pick"
	else
		sudo machinectl start "$pick" && dunstify terminalx "Booting $pick"
	fi
elif [[ "$1" == shell ]]
then
	[ ! -f ~/.terminals ] && exit

	terminals=$(cat ~/.terminals | sort -t @ -k 2n)

	if [ ! -z "$terminals" ]
	then
		pick=$(echo "$terminals" | dmenu -l 20 -p "shell:")

		if [ ! -z "$pick" ]
		then
			machine=${pick#*@}

			was_active=0

			machine_exists "$machine" || exit
			machine_active "$machine" || ( sudo machinectl start "$machine" && dunstify terminalx "Booting $machine" )

			[[ 0 -eq "$was_active" ]]

			c=0

			while :;
			do
				c=$(( c + 1 ))

				if machine_active "$machine"
				then
					alacritty -e sh -c "sudo machinectl shell $pick; read"
					break
				elif [[ "$c" -ge 5 ]]
				then
					dunstify terminalx "Failed to run terminal on $machine"
					break
				fi

				sleep 1
			done
		fi
	fi
elif [[ "$1" == terminal ]]
then
	[ ! -f ~/.terminals ] && exit

	terminals=$(cat ~/.terminals | sort -t @ -k 2n)

	if [ ! -z "$terminals" ]
	then
		pick=$(echo "$terminals" | dmenu -l 20 -p "terminal:")

		if [ ! -z "$pick" ]
		then
			machine=${pick#*@}

			was_active=0

			machine_exists "$machine" || exit
			machine_active "$machine" || ( sudo machinectl start "$machine" && dunstify terminalx "Booting $machine" )

			[[ 0 -eq "$was_active" ]]

			c=0

			while :;
			do
				c=$(( c + 1 ))

				if machine_active "$machine"
				then
					sudo machinectl shell "$pick" /desktop/utilsbin/terminalx 2>/dev/null || (sleep 1; continue)
					break
				elif [[ "$c" -ge 5 ]]
				then
					dunstify terminalx "Failed to run terminal on $machine"
					break
				fi

				sleep 1
			done
		fi
	fi
else
	export DISPLAY=:0
	export XAUTHORITY=/tmp/nspawn/xauth

	pacman -Qs gaspar-device-gpu && alacritty || uxterm
fi
