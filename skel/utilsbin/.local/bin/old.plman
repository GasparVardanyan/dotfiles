#!/usr/bin/env bash

archive_av()
{
	rg --files --no-ignore | rg '\.(mkv|mp4|opus)$' | sed 's/^/youtube /;s/\.[^.]\+$//'
}
archive_th()
{
	rg --files --no-ignore | rg '\.jpg$' | sed 's/^/youtube /;s/\.[^.]\+$//'
}

YT="yt-dlp"
YT_THUMB=""
YT_COOKIES="--cookies-from-browser vivaldi"
YT_TCONV="--convert-thumbnails jpg --ppa 'ThumbnailsConvertor:-q:v 1'"
YT_META="--add-metadata --embed-thumbnail $YT_TCONV"
MPV="mpv --hwdec=vaapi --profile=enc-f-webm --fullscreen --loop-playlist=inf --ytdl-format='bestvideo[width<=1920][height<=1080]+bestaudio/best' --volume=60"
YT_QFULL="-f 'bestvideo+bestaudio/best'"
YT_QHD="-f 'bestvideo[width<=1920][height<=1080]+bestaudio/best'"
YT_AUDIO="-f 'bestaudio/best' -x"
YT_VID="$YT $YT_COOKIES $YT_META -o '%(id)s.%(ext)s'"
YT_THUMB="$YT $YT_COOKIES --skip-download --write-thumbnail $YT_TCONV -o '%(id)s'"

cmd_dv()
{
	DIR=$(dirname "$1")
	M3U=$(basename "$1")

	pushd "$DIR" > /dev/null

	$YT_VID $YT_QFULL -a "$M3U" --download-archive <(archive_av)

		mkdir -p .thumbnails

		pushd .thumbnails > /dev/null

			$YT_THUMB -a ../"$M3U" --download-archive <(archive_th)

		popd > /dev/null

	popd > /dev/null
}

cmd_dv_fhd()
{
	DIR=$(dirname "$1")
	M3U=$(basename "$1")

	pushd "$DIR" > /dev/null

	$YT_VID $YT_QHD -a "$M3U" --download-archive <(archive_av)

		mkdir -p .thumbnails

		pushd .thumbnails > /dev/null

			$YT_THUMB -a ../"$M3U" --download-archive <(archive_th)

		popd > /dev/null

	popd > /dev/null
}

cmd_da()
{

	DIR=$(dirname "$1")
	M3U=$(basename "$1")

	pushd "$DIR" > /dev/null

		$YT_VID $YT_QAUDIO -a "$M3U" --download-archive <(archive_av)

	popd > /dev/null
}

cmd_rtl()
{
	DIR=$(dirname "$1")
	M3U=$(basename "$1")

	pushd "$DIR" > /dev/null

		IFS=''

		cat -- "$M3U" | while read -r k
		do
			if [[ "$k" =~ ^#.*$ ]]
			then
				echo -E "$k"
			else
				k=$(echo "$k" | sed 's#https://youtube.com/watch?v=##')
				f=$(rg --files --no-ignore --maxdepth=1 -L . | rg -- "$k")
				if [[ $(echo "$f" | wc -l) != 1 ]]
				then
					echo error $k $(echo "$f" | wc -l)
					# dunstify u2m3u "error preparing $M3U"
					continue
				fi
				# echo -n "#EXTINF:,";
				# mediainfo --Output='General;%Movie%' -- "$f"
				echo "$f"
			fi
		done

	popd > /dev/null
}

cmd_mi()
{
	DIR=$(dirname "$1")
	M3U=$(basename "$1")

	pushd "$DIR" > /dev/null

		IFS=''

		cat -- "$M3U" | while read -r f
		do
			if [[ "$f" =~ ^#.*$ ]]
			then
				echo -E "$f"
			else
				if [[ $(echo "$f" | wc -l) != 1 ]]
				then
					echo error $k $(echo "$f" | wc -l)
					continue
				fi
				echo -n "#EXTINF:,";
				mediainfo --Output='General;%Movie%' -- "$f"
				echo "$f"
			fi
		done

	popd > /dev/null
}

cmd_fp()
{
	DIR=$(dirname "$1")
	LST=$(basename "$1")

	pushd "$DIR" > /dev/null

		cat -- "$LST" | sed "s#^\\./#$(pwd)/#"

	popd > /dev/null
}

cmd_pl()
{
	file=$1

	[ -d "$file" ] && [ -f "$file/playlist.m3u" ] && \
		file="$file/playlist.m3u"

	embed=""
	[ "$XEMBED" != '' ] && embed="--wid=$XEMBED"
	$MPV $embed "$file"
}

cmd_pls()
{
	file=$1

	[ -d "$file" ] && [ -f "$file/playlist.m3u" ] && \
		file="$file/playlist.m3u"

	embed=""
	[ "$XEMBED" != '' ] && embed="--wid=$XEMBED"
	$MPV --shuffle $embed "$file"
}

fcheck()
{
	if [ ! -f "$1" ] && [ ! -d "$1" ]
	then
		exit -1
	fi
}

fcheck "$2"
cmd_"$1" "$2"

# if [[ dv == "$1" ]]
# then
#     fcheck "$2"
#     cmd_dv "$2"
# elif [[ da == "$1" ]]
# then
#     fcheck "$2"
#     cmd_da "$2"
# elif [[ rtl == "$1" ]]
# then
#     fcheck "$2"
#     cmd_rtl "$2"
# elif [[ fp == "$1" ]]
# then
#     fcheck "$2"
#     cmd_fp "$2"
# fi
